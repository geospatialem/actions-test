name: Milestone content
on:
  push:
    branches:
      - master

permissions:
  contents: read
  issues: write 

jobs:
  add-content:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - uses: actions/github-script@v6
        env:
          GITHUB_TOKEN: ${{ secrets.github_token }}
        with:
          script: |
            let milestoneIssueList = ""
            const {data: milestones} = await github.rest.issues.listMilestones({
              repo: context.repo.repo,
              owner: context.repo.owner,
              state: 'open',
              sort: 'due_on',
              per_page: 100
            })

            if (!milestones.length) {
              console.log('There are no open milestones in this repo, ending run.')
              return
            }

            const currentDate = new Date(Date.now())
            const monthNames = ["January", "February", "March", "April", "May", "June", "July", "August", "September", "October", "November", "December"]
            const currentMonth = monthNames[currentDate.getMonth()]
            const currentDay = currentDate.getDate()
            const currentYear = currentDate.getFullYear()

            for (const milestone of milestones) {
              // console.log(milestone.title, milestone.number)
              // console.log(milestone.due_on, new Date(milestone.due_on), currentDate)
              if (milestone.due_on && new Date(milestone.due_on) > currentDate) {
                console.log("milestone number: " + milestone.number)
                let {data: milestoneIssues} = await github.rest.issues.listForRepo({
                  owner: context.repo.owner,
                  repo: context.repo.repo,
                  milestone: milestone.number,
                  state: 'all',
                  assignee: '*',
                  per_page: 100
                })
                console.log(milestoneIssues);
                const currentMilestone = milestone.number

                const milestoneIssueList = document.createElement("ul")
                milestoneIssueList.setAttribute("id", "list")

                for (const milestoneIssue of milestoneIssues) {
                  console.log("#" + milestoneIssue.number + "url: " + milestoneIssue.url);
                    
                  let li = document.createElement("li");
                  li.innerText = "#[" + milestoneIssue.number + "](" + milestoneIssue.url + "): " + milestoneIssue.title;
                  list.appendChild(li);
                }
                // setOutput('milestone', milestone)
                console.log(milestoneIssueList)
              }
            }

            

            /*await github.rest.issues.create({
              repo: context.repo.repo,
              owner: context.repo.owner,
              assignees: ['geospatialem'],
              labels: ['Documentation', '6 - Ready to Deploy'],
              title: "Docs: " + currentMonth + " " + currentDay + " Release Update ðŸš€",
              body: `### Description
              This week's updates include:

              milestoneIssueList

              More info: [Milestone: ` + currentMonth + `-` + currentDay + `-` + currentYear + `](../issues?q=milestone%3A%22` + currentMonth + `-` + currentDay + `-` + currentYear + `+AFD+Website+Release%22+is%3Aclosed)`
            })*/

            return            